{"version":3,"sources":["components/SearchBar.js","api/unsplash.js","components/ImageCard.js","components/ImageList.js","components/app.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","e","preventDefault","props","onSubmit","className","this","htmlFor","id","type","value","onChange","setState","target","React","Component","axios","create","baseURL","headers","Authorization","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","style","gridRowEnd","alt","image","description","src","urls","regular","ref","ImageList","images","map","key","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","getElementById"],"mappings":"sPA4BeA,E,4MAzBbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAEvB,IAAD,OACP,OACE,yBAAKM,UAAU,cACb,0BAAMD,SAAUE,KAAKN,aAAcK,UAAU,WAC3C,yBAAKA,UAAU,SACb,2BAAOE,QAAQ,eAAf,gBACA,2BACEC,GAAG,cACHC,KAAK,OACLC,MAAOJ,KAAKR,MAAMC,KAClBY,SAAU,SAACV,GAAD,OAAO,EAAKW,SAAS,CAAEb,KAAME,EAAEY,OAAOH,kB,GAjBtCI,IAAMC,W,QCAfC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,2DCwBJC,G,wDA1Bb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAORmB,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,GAAK,GACtC,EAAKX,SAAS,CAAEe,WAThB,EAAKH,SAAWV,IAAMgB,YACtB,EAAKhC,MAAQ,CAAE6B,MAAO,GAHL,E,gEAMjBrB,KAAKkB,SAASC,QAAQM,iBAAiB,OAAQzB,KAAKgB,Y,+BAQpD,OACE,yBAAKU,MAAO,CAAEC,WAAW,QAAD,OAAU3B,KAAKR,MAAM6B,SAC3C,yBACEO,IAAK5B,KAAKH,MAAMgC,MAAMC,YACtBC,IAAK/B,KAAKH,MAAMgC,MAAMG,KAAKC,QAC3BC,IAAKlC,KAAKkB,gB,GApBIV,IAAMC,YCQf0B,EAPG,SAACtC,GACjB,IAAMuC,EAASvC,EAAMuC,OAAOC,KAAI,SAACR,GAC/B,OAAO,kBAAC,EAAD,CAAWS,IAAKT,EAAM3B,GAAI2B,MAAOA,OAE1C,OAAO,yBAAK9B,UAAU,cAAcqC,ICoBvBG,E,4MArBb/C,MAAQ,CAAE4C,OAAQ,I,EAClBI,e,uCAAiB,WAAO/C,GAAP,eAAAgD,EAAA,sEACQC,EAASC,IAC9B,yCACA,CACEC,OAAQ,CAAEC,MAAOpD,KAJN,OACTqD,EADS,OAOf,EAAKxC,SAAS,CAAE8B,OAAQU,EAASC,KAAKC,UAPvB,2C,6GAWf,OACE,yBAAKjD,UAAU,eAAe2B,MAAO,CAAEuB,UAAW,OAChD,kBAAC,EAAD,CAAWnD,SAAUE,KAAKwC,iBAC1B,kBAAC,EAAD,CAAWJ,OAAQpC,KAAKR,MAAM4C,c,GAhBpB5B,IAAMC,WCDxByC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cc786439.chunk.js","sourcesContent":["import React from \"react\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.term);\n  };\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label htmlFor=\"searchInput\">Image Search</label>\n            <input\n              id=\"searchInput\"\n              type=\"text\"\n              value={this.state.term}\n              onChange={(e) => this.setState({ term: e.target.value })}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.unsplash.com\",\n  headers: {\n    Authorization: \"Client-ID D1kigTDav2C7A5rGiTGvEvF-bMuW8NBMitRJusecR2w\",\n  },\n});\n","import React from \"react\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageRef = React.createRef();\n    this.state = { spans: 0 };\n  }\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    const spans = Math.ceil(height / 10 + 1);\n    this.setState({ spans });\n  };\n  render() {\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img\n          alt={this.props.image.description}\n          src={this.props.image.urls.regular}\n          ref={this.imageRef}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./ImageList.css\";\nimport ImageCard from \"./ImageCard\";\nconst ImageList = (props) => {\n  const images = props.images.map((image) => {\n    return <ImageCard key={image.id} image={image} />;\n  });\n  return <div className=\"image-list\">{images}</div>;\n};\n\nexport default ImageList;\n","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport unsplash from \"../api/unsplash\";\nimport ImageList from \"./ImageList\";\n\nclass App extends React.Component {\n  state = { images: [] };\n  onSearchSubmit = async (term) => {\n    const response = await unsplash.get(\n      \"https://api.unsplash.com/search/photos\",\n      {\n        params: { query: term },\n      }\n    );\n    this.setState({ images: response.data.results });\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: \"2%\" }}>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}